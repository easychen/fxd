SDK 的函数列表，包括函数名称、函数用途和参数。

### FxdSdk 类

1. **构造函数 `constructor`**
   - **用途**：初始化 SDK 实例，加载配置信息和数据库。
   - **参数**：
     - `packageInfo` (可选)：包信息对象，默认为 `null`。

2. **函数 `setAiApi`**
   - **用途**：设置 AI API 的密钥和基础 URL。
   - **参数**：
     - `key`：API 密钥。
     - `api_base` (可选)：API 基础 URL。

3. **函数 `aiEmbedding`**
   - **用途**：生成文本嵌入表示。
   - **参数**：
     - `text`：输入文本。
     - `model` (可选)：模型名称，默认为 `text-embedding-3-small`。

4. **函数 `aiStream`**
   - **用途**：使用 AI 流式聊天模型生成响应。
   - **参数**：
     - `messages`：消息列表或字符串。
     - `data` (可选)：数据对象。
     - `model` (可选)：模型名称，默认为 `gpt-3.5-turbo`。

5. **函数 `aiChat`**
   - **用途**：使用 AI 聊天模型生成响应。
   - **参数**：
     - `messages`：消息列表或字符串。
     - `data` (可选)：数据对象。
     - `model` (可选)：模型名称，默认为 `gpt-3.5-turbo`。
     - `callback` (可选)：回调函数。

6. **函数 `wslog`**
   - **用途**：记录 WebSocket 日志。
   - **参数**：
     - `message`：日志消息。
     - `replace` (可选)：是否替换现有日志。

7. **函数 `setValue`**
   - **用途**：设置数据库中的值。
   - **参数**：
     - `key`：键。
     - `value`：值。
     - `overwrite` (可选)：是否覆盖现有值，默认为 `true`。

8. **函数 `getValue`**
   - **用途**：获取数据库中的值。
   - **参数**：
     - `key`：键。

9. **函数 `setToken`**
   - **用途**：设置 API 令牌。
   - **参数**：
     - `token`：令牌字符串。

10. **函数 `saveKV`**
    - **用途**：保存键值对到文件。
    - **参数**：
      - `filename`：文件名。
      - `key`：键。
      - `value`：值。

11. **函数 `loadKV`**
    - **用途**：从文件加载键值对。
    - **参数**：
      - `filename`：文件名。
      - `key` (可选)：键，如果为 `false`，则返回整个对象。

12. **函数 `saveFile`**
    - **用途**：保存内容到文件。
    - **参数**：
      - `filename`：文件名。
      - `content`：文件内容。

13. **函数 `loadFile`**
    - **用途**：从文件加载内容。
    - **参数**：
      - `filename`：文件名。

14. **函数 `saveToken`**
    - **用途**：保存令牌到文件。
    - **参数**：
      - `token`：令牌字符串。

15. **函数 `loadToken`**
    - **用途**：从文件加载令牌。

16. **函数 `cleanToken`**
    - **用途**：清除存储的令牌。

17. **函数 `listSheet`**
    - **用途**：列出所有 sheet 文件。

18. **函数 `loadSheet`**
    - **用途**：加载指定的 sheet 文件。
    - **参数**：
      - `sheetName`：sheet 文件名。

19. **函数 `saveSheet`**
    - **用途**：保存内容到指定的 sheet 文件。
    - **参数**：
      - `sheetName`：sheet 文件名。
      - `content`：内容对象。

20. **函数 `removeSheet`**
    - **用途**：删除指定的 sheet 文件。
    - **参数**：
      - `sheetName`：sheet 文件名。

21. **函数 `listVar`**
    - **用途**：列出环境变量、设置和 sheet 目录中的字段。

22. **函数 `_request`**
    - **用途**：发送 HTTP 请求。
    - **参数**：
      - `method`：HTTP 方法。
      - `uri`：请求 URI。
      - `data` (可选)：请求数据。

23. **函数 `profile`**
    - **用途**：获取用户个人信息。

24. **函数 `flow`**
    - **用途**：获取指定 ID 的流程详情。
    - **参数**：
      - `id`：流程 ID。

25. **函数 `cron`**
    - **用途**：获取定时任务列表。

26. **函数 `shortcuts`**
    - **用途**：获取快捷任务列表。

27. **函数 `sha1`**
    - **用途**：生成字符串的 SHA1 哈希值。
    - **参数**：
      - `string`：输入字符串。

28. **函数 `scSend`**
    - **用途**：通过 server 酱发送通知。
    - **参数**：
      - `text`：通知文本。
      - `desp` (可选)：描述。
      - `key` (可选)：发送密钥。

29. **函数 `apprise`**
    - **用途**：使用 Apprise 发送通知。
    - **参数**：
      - `url`：Apprise 服务器 URL。
      - `title`：通知标题。
      - `body`：通知内容。
      - `type` (可选)：内容类型，默认为 `markdown`。

### 辅助函数

1. **函数 `getHomeDir`**
   - **用途**：获取用户主目录路径。

2. **函数 `getDesktopPath`**
   - **用途**：获取桌面路径。
   - **参数**：
     - `filePath` (可选)：附加的文件路径。

3. **函数 `getDirname`**
   - **用途**：获取文件路径的目录名。
   - **参数**：
     - `filePath`：文件路径。

4. **函数 `getPackageInfo`**
   - **用途**：获取包信息。
   - **参数**：
     - `filePath`：文件路径。

5. **函数 `myFetch`**
   - **用途**：发送带超时设置的 fetch 请求。
   - **参数**：
     - `url`：请求 URL。
     - `options`：请求选项。
     - `timeout` (可选)：超时时间，默认为 5000 毫秒。

6. **函数 `jsonDecode`**
   - **用途**：解码 JSON 字符串。
   - **参数**：
     - `str`：JSON 字符串。

7. **函数 `findCommands`**
   - **用途**：在字符串中查找命令模式。
   - **参数**：
     - `inputString`：输入字符串。

8. **函数 `pFetch`**
   - **用途**：发送带代理和超时设置的 fetch 请求。
   - **参数**：
     - `url`：请求 URL。
     - `options`：请求选项。

FXD Core应用的方法列表，从所有的FXD APP均从它 extend，可以直接使用和重载以下方法：

1. **constructor**
   - **用途**: 初始化应用程序核心类，设置SDK实例和初始参数。
   - **参数**: 无

2. **run**
   - **用途**: 运行命令，根据传递的参数和选项执行相应的方法。
   - **参数**:
     - `params`: 命令参数数组
     - `opts`: 选项对象
     - `raw`: 布尔值，表示是否原始运行
     - `cli_path`: CLI路径

3. **install**
   - **用途**: 在当前目录通过npm安装package。
   - **参数**:
     - `args`: 包名数组
     - `opts`: 选项对象
     - `_command`: 命令字符串
     - `cli_path`: CLI路径

4. **list**
   - **用途**: 列出已保存的命令。
   - **参数**:
     - `args`: 参数数组
     - `opts`: 选项对象

5. **test**
   - **用途**: 测试函数，获取并打印参数`name`。
   - **参数**:
     - `args`: 参数数组
     - `opts`: 选项对象

6. **exe**
   - **用途**: 执行已保存的命令（别名函数）。
   - **参数**:
     - `index`: 命令索引

7. **exec**
   - **用途**: 执行已保存的命令。
   - **参数**:
     - `index`: 命令索引

8. **login**
   - **用途**: 用户登录，支持交互式输入token。
   - **参数**:
     - `args`: 参数数组
     - `opts`: 选项对象

9. **logout**
   - **用途**: 用户登出，清除token。
   - **参数**: 无

10. **profile**
    - **用途**: 获取用户个人信息并打印。
    - **参数**: 无

11. **cron**
    - **用途**: 获取并打印cron任务信息。
    - **参数**: 无

12. **shortcuts**
    - **用途**: 获取并打印快捷方式信息。
    - **参数**: 无

13. **list_sheet**
    - **用途**: 列出所有工作表。
    - **参数**:
      - `args`: 参数数组
      - `opts`: 选项对象

14. **load_sheet**
    - **用途**: 加载指定名称的工作表。
    - **参数**:
      - `args`: 参数数组
      - `opts`: 选项对象，必须包含`name`

15. **save_sheet**
    - **用途**: 保存工作表，支持base64编码内容。
    - **参数**:
      - `args`: 参数数组
      - `opts`: 选项对象，必须包含`name`和`content`

16. **remove_sheet**
    - **用途**: 删除指定名称的工作表。
    - **参数**:
      - `args`: 参数数组
      - `opts`: 选项对象，必须包含`name`

17. **settings_list**
    - **用途**: 列出settings.json中的所有设置。
    - **参数**:
      - `args`: 参数数组
      - `opts`: 选项对象

18. **settings_save**
    - **用途**: 保存设置到settings.json。
    - **参数**:
      - `args`: 参数数组
      - `opts`: 选项对象，必须包含`key`和`value`

19. **list_var**
    - **用途**: 列出所有变量。
    - **参数**:
      - `args`: 参数数组
      - `opts`: 选项对象

20. **save_last**
    - **用途**: 保存最后的任务结果。
    - **参数**:
      - `args`: 参数数组
      - `opts`: 选项对象，必须包含`task_id`和`output`

21. **get_last**
    - **用途**: 获取并打印最后的任务结果。
    - **参数**:
      - `args`: 参数数组
      - `opts`: 选项对象

22. **wslog**
    - **用途**: 记录WebSocket日志。
    - **参数**:
      - `args`: 参数数组
      - `opts`: 选项对象，必须包含`message`，可选`replace`

23. **echoError**
    - **用途**: 显示错误信息并退出程序。
    - **参数**:
      - `msg`: 错误信息字符串

24. **help**
    - **用途**: 显示帮助信息。
    - **参数**: 无

25. **setDeaultOpts**
    - **用途**: 设置默认选项。
    - **参数**:
      - `opts`: 选项对象

26. **setDeaultCommand**
    - **用途**: 设置默认命令。
    - **参数**:
      - `command`: 命令字符串

27. **get**
    - **用途**: 获取参数值，支持特殊符号替换和base64解码。
    - **参数**:
      - `key`: 参数键
      - `opts`: 选项对象
      - `command`: 命令字符串

28. **log**
    - **用途**: 打印日志信息。
    - **参数**:
      - `args`: 日志信息数组

29. **return**
    - **用途**: 返回结果，根据格式打印。
    - **参数**:
      - `ret`: 返回结果
      - `force_silent`: 布尔值，是否强制静默

30. **feedPublish**
    - **用途**: 发布feed到fxd云端。
    - **参数**:
      - `content`: feed内容
      - `meta`: 元数据
      - `is_public`: 布尔值，是否公开
      - `command`: 命令字符串
      - `task_title`: 任务标题
      - `task_icon`: 任务图标

31. **feedRemove**
    - **用途**: 删除云端feed。
    - **参数**:
      - `id`: feed ID

32. **mergeProps**
    - **用途**: 合并属性。
    - **参数**:
      - `oldObject`: 原对象
      - `props`: 属性对象

33. **jsonDecode**
    - **用途**: 解码JSON字符串。
    - **参数**:
      - `jsonString`: JSON字符串

